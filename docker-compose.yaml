services:
  web:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx/:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - psychic-waffle

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - ORIGIN=${ORIGIN_URL}
      - NODE_ENV=${BUILD_TYPE}
    depends_on:
      - api
    networks:
      - psychic-waffle

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # - POSTGRES_USER=${DB_USER}
      # - POSTGRES_PASSWORD=${DB_PASSWORD}
      # - POSTGRES_DB=${DB_NAME}
      # - POSTGRES_HOST=${DB_HOST}
      # - POSTGRES_PORT=${DB_PORT}
      - TEST_POSTGRES_USER=${TEST_DB_USER}
      - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - TEST_POSTGRES_DB=${TEST_DB_NAME}
      - TEST_POSTGRES_HOST=${TEST_DB_HOST}
      - TEST_POSTGRES_PORT=${TEST_DB_PORT}
    depends_on:
      # db:
      #   condition: service_healthy
      db_test:
        condition: service_healthy
    networks:
      - psychic-waffle

  # db:
  #   image: postgres:16.4
  #   container_name: ${DB_HOST}
  #   environment:
  #     - PGUSER=${DB_USER}
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #     - POSTGRES_HOST=${DB_HOST}
  #   ports:
  #     - '1234:5432'
  #   volumes:
  #     - ./pg_data:/var/lib/postgresql/data
  #   networks:
  #     - psychic-waffle
  #   healthcheck:
  #     test: "pg_isready -h db"
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  db_test:
    image: postgres:16.4
    container_name: ${TEST_DB_HOST}
    environment:
      - PGUSER=${TEST_DB_USER}
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - POSTGRES_HOST=${TEST_DB_HOST}
    ports:
      - '4568:5432'
    volumes:
      - ./pg_data_test:/var/lib/postgresql/data
    networks:
      - psychic-waffle
    healthcheck:
      test: "pg_isready -h db_test"
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  # pg_data:
  pg_data_test:

    # Networks to be created to facilitate communication between containers
networks:
  psychic-waffle:
    driver: bridge
